version: '3.8'

services:

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es_data_1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 30

#  elasticsearch1:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    container_name: elasticsearch1
#    hostname: elasticsearch1
#    restart: unless-stopped
#    volumes:
#      - type: bind
#        source: ./es_data_1
#        target: /usr/share/elasticsearch/data
#      - type: bind
#        source: ./shared_folder
#        target: /shared_folder
#    ports:
#      - "9200:9200"
#    environment:
#      - "node.name=elasticsearch1"
#      - "bootstrap.memory_lock=true"
#      - "cluster.name=es-cluster"
#      - "discovery.seed_hosts=elasticsearch2,elasticsearch3"
#      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
#      - "xpack.security.enabled=false"
#      - "xpack.security.http.ssl.enabled=false"
#      - "xpack.security.transport.ssl.enabled=false"
#      - "xpack.ml.enabled=false"
#      - "xpack.graph.enabled=false"
#      - "xpack.watcher.enabled=false"
#      - "path.repo=/shared_folder"
#      - "ingest.geoip.downloader.enabled=false"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
#      interval: 30s
#      timeout: 10s
#      retries: 30
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    deploy:
#      resources:
#        limits:
#          memory: 1500m
#
#  elasticsearch2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    container_name: elasticsearch2
#    hostname: elasticsearch2
#    restart: unless-stopped
#    volumes:
#      - type: bind
#        source: ./es_data_2
#        target: /usr/share/elasticsearch/data
#      - type: bind
#        source: ./shared_folder
#        target: /shared_folder
#    ports:
#      - "9201:9200"
#    environment:
#      - "node.name=elasticsearch2"
#      - "bootstrap.memory_lock=true"
#      - "cluster.name=es-cluster"
#      - "discovery.seed_hosts=elasticsearch1,elasticsearch3"
#      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
#      - "xpack.security.enabled=false"
#      - "xpack.security.http.ssl.enabled=false"
#      - "xpack.security.transport.ssl.enabled=false"
#      - "xpack.ml.enabled=false"
#      - "xpack.graph.enabled=false"
#      - "xpack.watcher.enabled=false"
#      - "path.repo=/shared_folder"
#      - "ingest.geoip.downloader.enabled=false"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
#      interval: 30s
#      timeout: 10s
#      retries: 30
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#
#  elasticsearch3:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
#    container_name: elasticsearch3
#    hostname: elasticsearch3
#    restart: unless-stopped
#    volumes:
#      - type: bind
#        source: ./es_data_3
#        target: /usr/share/elasticsearch/data
#      - type: bind
#        source: ./shared_folder
#        target: /shared_folder
#    ports:
#      - "9202:9200"
#    environment:
#      - "node.name=elasticsearch3"
#      - "bootstrap.memory_lock=true"
#      - "cluster.name=es-cluster"
#      - "discovery.seed_hosts=elasticsearch1,elasticsearch2"
#      - "cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3"
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.index.number_of_replicas=0 -Des.enforce.bootstrap.checks=true"
#      - "xpack.security.enabled=false"
#      - "xpack.security.http.ssl.enabled=false"
#      - "xpack.security.transport.ssl.enabled=false"
#      - "xpack.ml.enabled=false"
#      - "xpack.graph.enabled=false"
#      - "xpack.watcher.enabled=false"
#      - "path.repo=/shared_folder"
#      - "ingest.geoip.downloader.enabled=false"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
#      interval: 30s
#      timeout: 10s
#      retries: 30
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
#    container_name: logstash
#    volumes:
#      - ./logstash/pipeline:/usr/share/logstash/pipeline
#      - ./logstash/logstash_ingest_data/:/usr/share/logstash/ingest_data
#    ports:
#      - "6000:6000"
#      - "9600:9600"
#    depends_on:
#      elasticsearch1:
#        condition: service_healthy
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
#    container_name: kibana
#    ports:
#      - 5601:5601
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch1:9200
#      ELASTICSEARCH_HOSTS: '["http://elasticsearch1:9200","http://elasticsearch2:9200","http://elasticsearch3:9200"]'
#    depends_on:
#      elasticsearch1:
#        condition: service_healthy

  app:
    image: docker.io/kienonwork/user-warehouse
    container_name: user-warehouse
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      spring.elasticsearch.uris: http://elasticsearch1:9200
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 30s
      timeout: 10s
      retries: 30
    depends_on:
      elasticsearch1:
        condition: service_healthy
